scalar Time

directive @goModel(
  model: String
  models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

directive @goField(
  forceResolver: Boolean
  name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

directive @goTag(
  key: String!
  value: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

type TinyJob @goModel(model: "github.com/lucagez/tinyq/sqlc.TinyJob") {
  id: ID!
}

# TODO: These values should be optional in update queries
input HttpJobArgs {
  run_at: Time!
  name: String!
  state: String!
  url: String!
  method: String!
}

type Mutation {
  createJob(args: HttpJobArgs): TinyJob!
  updateJobByName(name: String!, args: HttpJobArgs): TinyJob!
  updateJobById(id: ID!, args: HttpJobArgs): TinyJob!
  deleteJobByName(name: String!): TinyJob!
  deleteJobByID(id: ID!): TinyJob!
}

input QueryJobsArgs {
  limit: Int! = 50
  skip: Int! = 0
  filter: String
}

type Query {
  searchJobs(args: QueryJobsArgs!): [TinyJob]!
  queryJobByName(name: String!): TinyJob!
  queryJobByID(id: ID!): TinyJob!
}
